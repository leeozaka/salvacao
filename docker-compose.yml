version: '3.8'

services:
  # PostgreSQL Database
  db:
    container_name: salvacao_db
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    networks:
      - salvacao_network
    environment:
      POSTGRES_DB: cachorrinhodb
      POSTGRES_USER: salvacao 
      POSTGRES_PASSWORD: salvacao123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U salvacao -d cachorrinhodb"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s
  
  # Backend API
  api:
    container_name: salvacao_api
    build: 
      context: ./cachorrinho-express
      dockerfile: Dockerfile
    volumes:
      - ./cachorrinho-express:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://salvacao:salvacao123@db:5432/cachorrinhodb?connect_timeout=30
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-my-super-secure-jwt-secret}
      PORT: 3344
    networks:
      - salvacao_network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3344/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    
  # Frontend Dashboard
  dashboard:
    container_name: salvacao_dashboard
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    volumes:
      - ./admin-dashboard:/app
      - /app/node_modules
      - /app/.next
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: /api
    networks:
      - salvacao_network
    depends_on:
      - api
    restart: always
  
  # Nginx Reverse Proxy
  nginx:
    container_name: salvacao_nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - dashboard
      - api
    networks:
      - salvacao_network
    restart: always

volumes:
  postgres_data:

networks:
  salvacao_network:
    driver: bridge
